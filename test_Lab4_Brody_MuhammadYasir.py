"""
Name: Brody Dentinger
Partner: Muhammad Yasir Patel
Group: 15
File: test_Lab4_Brody_MuhammadYasir.py
Date: March 18, 2023
Description: This file was created for lab 4. It uses selenium to generate test cases for a web application. It
explores using selection structure within selenium.

"""

# Generated by Selenium IDE
import unittest
import pytest
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities

class TestLab4BrodyMuhammadYasir():

  # set up now opens the web browser
  def setup_method(self, method):
    self.driver = webdriver.Chrome()
    self.vars = {}

  # tear down now closes the web browser
  def teardown_method(self, method):
    self.driver.quit()

  # main test case class
  def test_lab4BrodyMuhammadYasir(self):

    # Get/Open the Url
    self.driver.get("https://www.calculator.net/body-fat-calculator.html/")
    # Hit the clear button
    self.driver.find_element(By.CSS_SELECTOR, ".clearbtn").click()

    # Store the value of the radio buttons as gender, set it as F (this will run the female calculations)
    # We can change the value to "M" here to run the male test cases
    self.vars["gender"] = "F"

    # If the gender variable is F, run the female test cases
    if self.driver.execute_script("return (arguments[0] == \"F\")", self.vars["gender"]):

      print("\nFEMALE TEST START -------------------------------------------------")

      # find this element (which represents the female radio button) and click it
      self.driver.find_element(By.CSS_SELECTOR, ".cbcontainer:nth-child(2)").click()

      # find this element (which is the age text field) and click it
      self.driver.find_element(By.NAME, "cage").click()
      # find this element (Which is the name text field), and send the key strokes 40
      self.driver.find_element(By.NAME, "cage").send_keys("40")
      print("\nTEST PASS: Enter Age Passed")

      # find this element (weight) and click it
      self.driver.find_element(By.NAME, "cweightkgs").click()
      # find this element (weight) and send the key strokes 100
      self.driver.find_element(By.NAME, "cweightkgs").send_keys("100")
      print("\nTEST PASS: Enter Weight Passed")

      # find the element (height) and click it
      self.driver.find_element(By.ID, "cheightmeter").click()
      # find the element (height), and send the key strokes 189
      self.driver.find_element(By.ID, "cheightmeter").send_keys("189")
      print("\nTEST PASS: Enter Height Passed")

      # find the element (neck) and click it
      self.driver.find_element(By.ID, "cneckmeter").click()
      # find the element (neck), and send key strokes 57
      self.driver.find_element(By.ID, "cneckmeter").send_keys("57")
      print("\nTEST PASS: Enter Neck Passed")

      # find the element (waist), and click it
      self.driver.find_element(By.ID, "cwaistmeter").click()
      # find the element (waist), and send the keystrokes 98
      self.driver.find_element(By.ID, "cwaistmeter").send_keys("98")
      print("\nTEST PASS: Enter Waist Passed")

      # find the element (hip), and click it
      self.driver.find_element(By.ID, "chipmeter").click()
      # find the element (waist), and send key strokes 100
      self.driver.find_element(By.ID, "chipmeter").send_keys("100")
      print("\nTEST PASS: Enter Hip Passed")

      # click the calculate button
      self.driver.find_element(By.CSS_SELECTOR, ".cbcontainer:nth-child(2)").click()
      self.driver.find_element(By.CSS_SELECTOR, "table:nth-child(4) input").click()

      # find the element (the final output) and assert that the final calculation is correct
      assert self.driver.find_element(By.CSS_SELECTOR, "font > b").text == "Body Fat: 23.0%"
      # print the result of the final calculation
      print("\nBody Fat: 23.0%")
      print("\nTEST PASS: Final Body Result Passed")



    # Else, the variable must be M and we run the male test cases
    else:

      print("\nMALE TEST START -------------------------------------------------")

      # find the element (male radio button) and click it
      self.driver.find_element(By.CSS_SELECTOR, ".cbcontainer:nth-child(1) > .rbmark").click()
      # find the element (clear button) and click it
      self.driver.find_element(By.CSS_SELECTOR, ".clearbtn").click()

      # find the element (age) and click it
      self.driver.find_element(By.NAME, "cage").click()
      # find the element (age) and send key strokes 15 to it
      self.driver.find_element(By.NAME, "cage").send_keys("15")
      print("\nTEST PASS: Enter Age Passed")

      # find the element (weight) and click it
      self.driver.find_element(By.NAME, "cweightkgs").click()
      # find the element (weight) and send key strokes 220
      self.driver.find_element(By.NAME, "cweightkgs").send_keys("220")
      print("\nTEST PASS: Enter Weight Passed")

      # find the element (height) and click it
      self.driver.find_element(By.ID, "cheightmeter").click()
      # find the element (height) and send key strokes 90
      self.driver.find_element(By.ID, "cheightmeter").send_keys("90")
      print("\nTEST PASS: Enter Height Passed")

      # find the element (neck) and click it
      self.driver.find_element(By.ID, "cneckmeter").click()
      # find the element (neck) and send key strokes 18
      self.driver.find_element(By.ID, "cneckmeter").send_keys("18")
      print("\nTEST PASS: Enter Neck Passed")

      # find the element (waist) and click it
      self.driver.find_element(By.ID, "cwaistmeter").click()
      # find the element (waist) and send key strokes 100
      self.driver.find_element(By.ID, "cwaistmeter").send_keys("100")
      print("\nTEST PASS: Enter Waist Passed")

      # find the element (calculate) and click it
      self.driver.find_element(By.CSS_SELECTOR, "table:nth-child(4) input").click()
      # find the element (that holds the final body fat result), and assert that it's the same as we expect
      assert self.driver.find_element(By.CSS_SELECTOR, "font > b").text == "Body Fat: 60.7%"
      # print the result of the final Body Fat calcualtion
      print("\nBody Fat: 60.7%")
      print("\nTEST PASS: Final Body Result Passed")

    # ---------------RUNNING THE SAME CODE BUT WITH THE VARIABLE M TO SHOW BOTH TEST CASES-------------------------
    #----------------AND MAKE MARKING THE ASSIGNMENT EASIER--------------------------------------------------------

    # Store the value of the radio buttons as gender, set it as F (this will run the female calculations)
    # We can change the value to "M" here to run the male test cases
    self.vars["gender"] = "M"

    # If the gender variable is F, run the female test cases
    if self.driver.execute_script("return (arguments[0] == \"F\")", self.vars["gender"]):

      print("\nFEMALE TEST START -------------------------------------------------")

      self.driver.find_element(By.CSS_SELECTOR, ".cbcontainer:nth-child(2)").click()
      self.driver.find_element(By.NAME, "cage").click()
      self.driver.find_element(By.NAME, "cage").send_keys("40")
      print("\nTEST PASS: Enter Age Passed")

      self.driver.find_element(By.NAME, "cweightkgs").click()
      self.driver.find_element(By.NAME, "cweightkgs").send_keys("100")
      print("\nTEST PASS: Enter Weight Passed")

      self.driver.find_element(By.ID, "cheightmeter").click()
      self.driver.find_element(By.ID, "cheightmeter").send_keys("189")
      print("\nTEST PASS: Enter Height Passed")

      self.driver.find_element(By.ID, "cneckmeter").click()
      self.driver.find_element(By.ID, "cneckmeter").send_keys("57")
      print("\nTEST PASS: Enter Neck Passed")

      self.driver.find_element(By.ID, "cwaistmeter").click()
      self.driver.find_element(By.ID, "cwaistmeter").send_keys("98")
      print("\nTEST PASS: Enter Waist Passed")

      self.driver.find_element(By.ID, "chipmeter").click()
      self.driver.find_element(By.ID, "chipmeter").send_keys("100")
      print("\nTEST PASS: Enter Hip Passed")

      self.driver.find_element(By.CSS_SELECTOR, ".cbcontainer:nth-child(2)").click()
      self.driver.find_element(By.CSS_SELECTOR, "table:nth-child(4) input").click()

      # assert that the final calculation is correct
      assert self.driver.find_element(By.CSS_SELECTOR, "font > b").text == "Body Fat: 23.0%"
      # print the result
      print("\nBody Fat: 23.0%")
      print("\n TEST PASS: Final Body Result Passed")



    # Else, the variable must be M and we run the male test cases
    else:

      print("\nMALE TEST START -------------------------------------------------")

      self.driver.find_element(By.CSS_SELECTOR, ".cbcontainer:nth-child(1) > .rbmark").click()
      self.driver.find_element(By.CSS_SELECTOR, ".clearbtn").click()
      self.driver.find_element(By.NAME, "cage").click()
      self.driver.find_element(By.NAME, "cage").send_keys("15")
      print("\nTEST PASS: Enter Age Passed")

      self.driver.find_element(By.NAME, "cweightkgs").click()
      self.driver.find_element(By.NAME, "cweightkgs").send_keys("220")
      print("\nTEST PASS: Enter Weight Passed")

      self.driver.find_element(By.ID, "cheightmeter").click()
      self.driver.find_element(By.ID, "cheightmeter").send_keys("90")
      print("\nTEST PASS: Enter Height Passed")

      self.driver.find_element(By.ID, "cneckmeter").click()
      self.driver.find_element(By.ID, "cneckmeter").send_keys("18")
      print("\nTEST PASS: Enter Neck Passed")

      self.driver.find_element(By.ID, "cwaistmeter").click()
      self.driver.find_element(By.ID, "cwaistmeter").send_keys("100")
      print("\nTEST PASS: Enter Waist Passed")

      self.driver.find_element(By.CSS_SELECTOR, "table:nth-child(4) input").click()
      assert self.driver.find_element(By.CSS_SELECTOR, "font > b").text == "Body Fat: 60.7%"
      print("\nBody Fat: 60.7%")
      print("\nTEST PASS: Final Body Result Passed")